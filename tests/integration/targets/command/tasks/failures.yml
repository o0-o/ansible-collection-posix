# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
# -*- mode: yaml; yaml-indent-offset: 2; indent-tabs-mode: nil; -*-
---
# GNU General Public License v3.0+
# SPDX-License-Identifier: GPL-3.0-or-later
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
#
# Copyright (c) 2025 oÃ˜.o (@o0-o)
#
# This file is part of the o0_o.posix Ansible Collection.

- name: Skip for check_mode
  when: not ansible_check_mode
  block:

    - name: 'Fail: Exit code 1'
      block:

        - name: Run command that returns exit code 1
          o0_o.posix.command:
            argv:
              - return
              - 1
            _force_raw: "{{ _force_raw }}"

      rescue:

        - name: Assert failure due non-zero exit code
          ansible.builtin.assert:
            that:
              - ansible_failed_result['rc'] > 0

    - name: 'Fail: Run command in nonexistent directory'
      block:

        - name: Run command in nonexistent directory
          o0_o.posix.command:
            argv:
              - echo
              - foo
            chdir: /does/not/exist
            _force_raw: "{{ _force_raw }}"

      rescue:

        - name: Assert failure due to missing directory
          ansible.builtin.assert:
            that:
              - "'Unable to change directory' in ansible_failed_result.msg"

- name: 'Fail: Multiple command variants (cmd + argv)'
  block:

    - name: Run command with both cmd and argv
      o0_o.posix.command:
        cmd: echo foo
        argv: [echo, foo]
        _force_raw: "{{ _force_raw }}"

  rescue:

    - name: Assert error for mutually exclusive args
      ansible.builtin.assert:
        that:
          - "'Only one of' in ansible_failed_result['msg']"

- name: 'Fail: Missing all command inputs'
  block:

    - name: Run command without cmd or argv
      o0_o.posix.command:
        creates: /tmp/placeholder  # unrelated arg to force arg check
        _force_raw: "{{ _force_raw }}"

  rescue:

    - name: Assert failure for missing command input
      ansible.builtin.assert:
        that:
          - "'One of' in ansible_failed_result['msg']"

- name: 'Fail: Explicit return code check (false command)'
  block:

    - name: Run test command that should fail
      o0_o.posix.command:
        argv:
          - 'test'
          - '-d'
          - '/dev/null'
        _force_raw: "{{ _force_raw }}"

  rescue:

    - name: 'Assert false command returned rc>0 and failed'
      ansible.builtin.assert:
        that:
          - ansible_failed_result.rc > 0
          - ansible_failed_result.stdout == ''
          - ansible_failed_result.stderr == ''
