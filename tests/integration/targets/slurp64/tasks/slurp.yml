# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
# -*- mode: yaml; yaml-indent-offset: 2; indent-tabs-mode: nil; -*-
---
# GNU General Public License v3.0+
# SPDX-License-Identifier: GPL-3.0-or-later
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
# Copyright (c) 2025 o√ò.o (@o0-o)
#
# This file is part of the o0_o.posix Ansible Collection.

- name: Run slurp64 module normally
  o0_o.posix.slurp64:
    src: "{{ tmp }}"
    _force_raw: "{{ _force_raw }}"
  register: slurp_normal_reg

- name: Assert normal slurp64 returned expected content
  ansible.builtin.assert:
    that:
      - 'slurp_normal_reg["raw"] == _force_raw'
      - slurp_normal_reg is not changed
      - '"This is a test" in slurp_normal_reg["content"]'
      - '"Final line" in slurp_normal_reg["content"]'

- name: 'Fail: Run slurp64 on a non-existent file'
  block:

    - name: Run slurp64 on missing file
      o0_o.posix.slurp64:
        src: "/nonexistent/file/path"
        _force_raw: "{{ _force_raw }}"

  rescue:

    - name: Assert missing file produced error
      ansible.builtin.assert:
        that:
          - 'ansible_failed_result is defined'

- name: 'Fail: Run slurp64 with invalid argument'
  block:

    - name: Run slurp64 with unexpected parameter
      o0_o.posix.slurp64:
        src: "{{ tmp }}"
        unexpected_param: true
        _force_raw: "{{ _force_raw }}"

  rescue:

    - name: Assert invalid param caused failure
      ansible.builtin.assert:
        that:
          - "'unexpected_param' in ansible_failed_result['msg']"
