# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
# -*- mode: yaml; yaml-indent-offset: 2; indent-tabs-mode: nil; -*-
---
# GNU General Public License v3.0+
# SPDX-License-Identifier: GPL-3.0-or-later
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
#
# Copyright (c) 2025 oÃ˜.o (@o0-o)
#
# This file is part of the o0_o.posix Ansible Collection.

- name: Set destination path
  ansible.builtin.set_fact:
    tmpl_dest_path: "{{ tmpl_test_dir }}/hello.txt"

- name: Render hello.txt from template
  o0_o.posix.template:
    src: "{{ tmpl_dir }}/hello.j2"
    dest: "{{ tmpl_dest_path }}"
    _force_raw: "{{ _force_raw }}"
  register: template_render_reg

- name: Assert rendered output
  o0_o.posix.slurp64:
    src: "{{ tmpl_dest_path }}"
  register: slurp_content_reg

- name: Assert that raw execution is as expected
  ansible.builtin.assert:
    that:
      - "template_render_reg['raw'] == _force_raw"

- name: Debug slurp content
  ansible.builtin.debug:
    msg: >
      Content: '{{ slurp_content_reg['content'] }}'
      (length: {{ slurp_content_reg['content'] | length }})
      force_raw={{ _force_raw }} check_mode={{ ansible_check_mode }}
      user={{ lookup('pipe', 'id -un') }} greeting_var={{ greeting_var }}
    verbosity: 0

- name: Check file content
  ansible.builtin.assert:
    that:
      - slurp_content_reg['content'] | trim == 'Hello world'
    fail_msg: >
      Expected 'Hello world', got '{{ slurp_content_reg['content'] | trim }}'

- name: Run again to check idempotency
  o0_o.posix.template:
    src: "{{ tmpl_dir }}/hello.j2"
    dest: "{{ tmpl_dest_path }}"
    _force_raw: "{{ _force_raw }}"
  register: template_idempotent_reg

- name: Assert that raw execution is as expected
  ansible.builtin.assert:
    that:
      - "template_idempotent_reg['raw'] == _force_raw"

- name: Assert second run was idempotent
  ansible.builtin.assert:
    that:
      - template_idempotent_reg['changed'] == false
