# vim: ts=2:sw=2:sts=2:et:ft=yaml.ansible
# -*- mode: yaml; yaml-indent-offset: 2; indent-tabs-mode: nil; -*-
---
# GNU General Public License v3.0+
# SPDX-License-Identifier: GPL-3.0-or-later
# (see COPYING or https://www.gnu.org/licenses/gpl-3.0.txt)
#
# Copyright (c) 2025 o√ò.o (@o0-o)
#
# This file is part of the o0_o.posix Ansible Collection.

- name: Ensure tmp directory is clean
  file:
    path: "{{ tmpl_test_dir }}/"
    state: absent

- name: Create tmp directory
  file:
    path: "{{ tmpl_test_dir }}/"
    state: directory
    mode: '0755'

- name: Render template with passing validate command
  o0_o.posix.template:
    src: hello.j2
    dest: "{{ tmpl_test_dir }}/good.txt"
    validate: "/bin/sh -c 'grep Hello %s'"
    mode: '0644'
  register: result_pass
  vars:
    greeting: Hello world

- name: Assert file does not exist in check mode
  ansible.builtin.stat:
    path: "{{ tmpl_test_dir }}/good.txt"
  register: stat
  failed_when: stat.stat.exists
  when: ansible_check_mode

- name: Not check mode
  when: not ansible_check_mode
  block:

    - name: Slurp result file
      o0_o.posix.slurp64:
        src: "{{ tmpl_test_dir }}/good.txt"
      register: good_slurp

    - name: Assert that content rendered properly
      assert:
        that:
          - good_slurp.content | trim == "Hello world"

- name: Try template with failing validate command
  block:

    - name: Render with failing validate
      o0_o.posix.template:
        src: hello.j2
        dest: "{{ tmpl_test_dir }}/bad.txt"
        validate: "/bin/sh -c 'grep NoMatch %s'"
      register: result_fail
      vars:
        greeting: Hello world

  rescue:

    - name: Pass
      ansible.builtin.meta: noop

  always:

    - name: Assert validation failed
      assert:
        that:
          - result_fail is failed
