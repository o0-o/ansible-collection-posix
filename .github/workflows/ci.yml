# vim: ts=2:sw=2:sts=2:et:ft=yaml
# -*- mode: yaml; yaml-indent-offset: 2; indent-tabs-mode: nil; -*-
---
name: Ansible Collection CI

on:
  push:
    branches: [ main ]
    tags:
      - "v*.*.*"
  pull_request:

jobs:
  docker-sanity:
    name: Sanity tests on Linux
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        os: &containers
          - debian:9
          - debian:10
          - debian:11
          - debian:12
          - debian:latest
          - ubuntu:20.04
          - ubuntu:22.04
          - ubuntu:latest  # LTS
          - ubuntu:rolling
          - fedora:38
          - fedora:39
          - fedora:latest
          - rockylinux:8
          - rockylinux:9
          - rockylinux:latest
          - almalinux:8
          - almalinux:9
          - almalinux:latest
          - quay.io/centos/centos:stream8
          - quay.io/centos/centos:stream9
          - quay.io/centos/centos:stream
          - opensuse/leap:15.4
          - opensuse/leap:15.5
          - opensuse/leap:latest
          - opensuse/tumbleweed
          - archlinux:latest
          - alpine:3.18
          - alpine:3.19
          - alpine:latest
    steps:
      - uses: actions/checkout@v4
      - name: Run in container
        run: |
          docker pull ${{ matrix.os }} || true
          docker run --rm \
            -v $PWD:/workspace \
            -w /workspace \
            ${{ matrix.os }} /bin/sh -c "\
              python3 -m venv .venv && \
              . ./.venv/bin/activate && \
              pip install ansible-core && \
              ansible-test sanity --venv"

  docker-units:
    name: Unit tests on Linux
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        os: *containers
    steps:
      - uses: actions/checkout@v4
      - name: Run in container
        run: |
          docker pull ${{ matrix.os }} || true
          docker run --rm \
            -v $PWD:/workspace \
            -w /workspace \
            ${{ matrix.os }} /bin/sh -c "\
              python3 -m venv .venv && \
              . ./.venv/bin/activate && \
              pip install ansible-core && \
              ansible-test units --venv"

  docker-integration:
    name: Integration tests on Linux
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        os: *containers
    steps:
      - uses: actions/checkout@v4
      - name: Run in container
        run: |
          docker pull ${{ matrix.os }} || true
          docker run --rm \
            -v $PWD:/workspace \
            -w /workspace \
            ${{ matrix.os }} /bin/sh -c "\
              python3 -m venv .venv && \
              . ./.venv/bin/activate && \
              pip install ansible-core && \
              ansible-test integration --venv"

  runner-sanity:
    name: Sanity tests on macOS and BSDs
    strategy:
      fail-fast: false
      matrix:
        os: &runners
          - macos-13
          - macos-14
          - macos-latest
          # - freebsd-13
          # - freebsd-14
          # - openbsd-7.6
          # - openbsd-7.7
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Ansible Core
        run: |
          python3 -m venv .venv
          . ./.venv/bin/activate
          pip install ansible-core
      - name: Run sanity tests
        run: ansible-test sanity --venv

  runner-units:
    name: Unit tests on macOS and BSDs
    strategy:
      fail-fast: false
      matrix:
        os: *runners
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Ansible Core
        run: |
          python3 -m venv .venv
          . ./.venv/bin/activate
          pip install ansible-core
      - name: Run unit tests
        run: ansible-test units --venv

  runner-integration:
    name: Integration tests on macOS and BSDs
    strategy:
      fail-fast: false
      matrix:
        os: *runners
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Install Ansible Core
        run: |
          python3 -m venv .venv
          . ./.venv/bin/activate
          pip install ansible-core
      - name: Run integration tests
        run: ansible-test integration --venv

  # build:
  #   name: Build Collection
  #   runs-on: ubuntu-latest
  #   needs: [sanity, units, integration, macos]
  #   steps:
  #     - uses: actions/checkout@v4
  #     - name: Install Ansible Core
  #       run: pip install ansible-core
  #     - name: Build Collection
  #       run: ansible-galaxy collection build
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v4
  #       with:
  #         name: ansible-collection-tarball
  #         path: ./*.tar.gz

  # publish:
  #   name: Publish to Ansible Galaxy
  #   runs-on: ubuntu-latest
  #   needs: build
  #   if: startsWith(github.ref, 'refs/tags/v')
  #   steps:
  #     - uses: actions/download-artifact@v4
  #       with:
  #         name: ansible-collection-tarball
  #     - name: Install Ansible Core
  #       run: pip install ansible-core
  #     - name: Publish to Galaxy
  #       run: ansible-galaxy collection publish ./*.tar.gz --token ${{ secrets.GALAXY_API_KEY }}
